#!/usr/bin/env escript 
%% -*- erlang -*-
%%! -pa ebin -name rpcclient

-define(HELP(Cmd, HelpStr), 
		main([Cmd | _]) ->
			   io:format("Usage: ~ts ~ts ~ts~n", [filename:basename(escript:script_name()),
												  Cmd, HelpStr])).
main(["reload", Node]) ->
	make_call(Node, erlbot, reload, []);
?HELP("reload", "<node>");

main(["stop", Node]) ->
	make_call(Node, init, stop, []);
?HELP("stop", "<node>");

main(["restart", Node]) ->
	make_call(Node, init, restart, []);
?HELP("restart", "<node>");

main(["ping", Node]) ->
	case net_adm:ping(list_to_atom(Node)) of
        pong -> ok;
        pang -> io:format("Node ~s down.~n", [Node]),
				halt(1)
    end;
?HELP("ping", "<node>");

main(["bcast", Node, Method, Msg]) ->
	Fun = list_to_atom(Method),
	make_call(Node, irc_conn, for_each_channel, [fun (Chan) -> irc_conn:Fun(Chan, hist, utf8_to_binary(Msg)) end]);
?HELP("bcast", "<node> [privmsg|action] <message>");

main(["privmsg", Node, Chan, Msg]) ->
	make_call(Node, irc_conn, privmsg, [Chan, hist, utf8_to_binary(Msg)]);
?HELP("privmsg", "<node> <channel> <message>");

main(["action", Node, Chan, Msg]) ->
	make_call(Node, irc_conn, action, [Chan, hist, utf8_to_binary(Msg)]);
?HELP("action", "<node> <channel> <message>");

main(["control", Node, Command | Args]) ->
	make_call(Node, irc_conn, list_to_atom(Command), [utf8_to_binary(A) || A <- Args]);
?HELP("control", "<node> <command> args...");

main(_) ->
	io:format("Usage: ~ts [stop|reload|ping|bcast|privmsg|action|control>] [args...]~n", 
			  [filename:basename(escript:script_name())]).

make_call(Node, Mod, Fun, Args) ->
	case rpc:call(list_to_atom(Node), Mod, Fun, Args) of
		{badrpc, Reason} ->
			io:format(standard_error, "~p:~p(~p) failed: ~p~n", [Mod, Fun, Args, Reason]);
		Res ->
			io:format("~p:~p(~p) -> ~p~n", [Mod, Fun, Args, Res])
	end.

utf8_to_binary(Str) ->
	case lists:all(fun (C) -> C < 128 end, Str) of
		true  -> Str;                 % pure ascii7 string
		false -> list_to_binary(Str)  % utf8 string, convert to binary
	end.
